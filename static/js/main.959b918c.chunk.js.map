{"version":3,"sources":["Components/Burger/BurgerIngredients/BurgerIngredient.module.css","Components/Navigation/SideDrawer/SideDrawer.module.css","Components/Burger/BuildControls/BuildControl/BuildControl.module.css","Components/UI/Input/Input.module.css","Assets/images/burger-logo.png","Components/Burger/BuildControls/BuildControls.module.css","HOC/Layout/Layout.module.css","Components/Navigation/Toolbar/Toolbar.module.css","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","Components/UI/Button/Button.module.css","Components/Order/Order.module.css","Components/Logo/Logo.module.css","Components/Navigation/NavigationItems/NavigationItems.module.css","Components/Navigation/Toggler/ToggleSideDrawer.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/Burger/Burger.module.css","Components/UI/Modal/Modal.module.css","Components/UI/Spinner/Spinner.module.css","Components/Order/CheckoutSummary/CheckoutSummary.module.css","Containers/Checkout/ContactData/ContactData.module.css","HOC/Auxiliary/Auxiliary.js","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/Navigation/Toggler/ToggleSideDrawer.js","Components/Navigation/Toolbar/Toolbar.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/SideDrawer/SideDrawer.js","HOC/Layout/Layout.js","Components/Burger/BurgerIngredients/BurgerIngredient.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/UI/Modal/Modal.js","Components/UI/Button/Button.js","Components/Burger/OrderSummary/OrderSummary.js","axios-order.js","Components/UI/Spinner/Spinner.js","HOC/withErrorHandler/withErrorHandler.js","Containers/BurgerBuilder/BurgerBuilder.js","Store/Actions/actionCreaters.js","Components/Order/CheckoutSummary/CheckoutSummary.js","Components/UI/Input/Input.js","Containers/Checkout/ContactData/ContactData.js","Containers/Checkout/Checkout.js","Components/Order/Order.js","Containers/Orders/Orders.js","App.js","serviceWorker.js","Store/Reducers/Reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","toggler","DrawerToggle","onClick","clicked","toolbar","Toolbar","DesktopOnly","backdrop","show","Backdrop","sideDrawer","classAdded","SideDrawer","Close","closed","Open","join","Layout","state","showSidedrawer","showSidedrawerHandler","setState","hideSidedrawerHandler","ButtonToggler","this","open","Content","Component","burgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","iKey","Array","_","i","BurgerIngredient","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Less","removed","disabled","disable","Label","label","More","added","controls","buildControls","BuildControls","PriceDisplay","price","toFixed","ctrl","ingredientsAdded","ingredientsRemoved","OrderButton","purchasable","ordered","Modal","nextProps","style","transform","opacity","button","Button","btnType","orderSummary","ingredientSummary","ikey","textTransform","size","totalPrice","purchaseCancel","purchaseContinue","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","loading","updatePurchaseState","ings","sum","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","pathname","disabledInfo","backgroundColor","textAlign","Spinner","onIngredientAdded","onIngredientRemoved","totalAmount","OrderSummary","connect","dispatch","ingName","ingredientName","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","orderFormat","elType","placeHolder","placeholder","validation","required","valid","ContactData","orderForm","name","street","zipCode","minLength","maxLength","country","email","deliveyMethod","formIsValid","orderPurchasedHandler","event","preventDefault","fixedFinalPrice","formData","formElementIdentifier","order","orderData","post","then","catch","checkValidity","rules","isValid","trim","inputChangedHandler","inputIdentifier","updatedOrderForm","console","log","updatedFormElement","target","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","path","match","component","amount","ingredientOutput","ig","Span","Order","Number","parseFloat","orders","get","fetchedOrders","data","err","App","Orders","Boolean","window","location","hostname","initialState","salad","cheese","meat","bacon","INGREDIENT_PRICES","reducer","action","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.959b918c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__IFC-O\",\"BreadTop\":\"BurgerIngredient_BreadTop__xI-Wp\",\"Seeds1\":\"BurgerIngredient_Seeds1__3NcnK\",\"Seeds2\":\"BurgerIngredient_Seeds2__3u9ZT\",\"Meat\":\"BurgerIngredient_Meat__3eclB\",\"Cheese\":\"BurgerIngredient_Cheese__3j2IK\",\"Salad\":\"BurgerIngredient_Salad__1sQVm\",\"Bacon\":\"BurgerIngredient_Bacon__2AtNt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2uBHz\",\"Open\":\"SideDrawer_Open__1Zw2D\",\"Close\":\"SideDrawer_Close__t3j3-\",\"Logo\":\"SideDrawer_Logo__3Xl72\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__diJXt\",\"Label\":\"BuildControl_Label__1vPXq\",\"Less\":\"BuildControl_Less__DYIzd\",\"More\":\"BuildControl_More__1qlut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Input_Label__1FE_p\",\"Input\":\"Input_Input__2nCMY\",\"InputElement\":\"Input_InputElement__2PYoF\",\"Invalid\":\"Input_Invalid__2fOHf\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__WREBM\",\"OrderButton\":\"BuildControls_OrderButton__16tWa\",\"enable\":\"BuildControls_enable__yX9iv\",\"PriceDisplay\":\"BuildControls_PriceDisplay__DMwrP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2rXhf\",\"ButtonToggler\":\"Layout_ButtonToggler__1dui8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__IOYzd\",\"DesktopOnly\":\"Toolbar_DesktopOnly__N2C-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2wyg8\",\"active\":\"NavigationItem_active__lChAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3Oy8F\",\"Success\":\"Button_Success__1jwqp\",\"Danger\":\"Button_Danger__2AHyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3HBxu\",\"Span\":\"Order_Span___v9So\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2EfCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2wLCH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"ToggleSideDrawer_DrawerToggle__2enpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3_le5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3RoEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3Yarv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__v7uBI\",\"Load5\":\"Spinner_Load5__1Z3Nk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1_FNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__23tT4\",\"Button\":\"ContactData_Button__34iEC\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React from 'react';\r\nimport burgerLogo from '../../Assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = () => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem} >\r\n        <NavLink \r\n        to={props.link} \r\n        exact\r\n        activeClassName={classes.active} >\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems} >\r\n        <NavigationItem link=\"/\" >Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\" >Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './ToggleSideDrawer.module.css';\r\n\r\nconst toggler  = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked} >\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default toggler;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Toggler from '../Toggler/ToggleSideDrawer';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <Toggler clicked={props.clicked} />\r\n        <Logo />\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n// import Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../HOC/Auxiliary/Auxiliary';\r\nimport burgerLogo from '../../../Assets/images/burger-logo.png';\r\n\r\nconst sideDrawer = (props) => {\r\n    let classAdded = [classes.SideDrawer, classes.Close];\r\n    if(props.closed){\r\n        classAdded = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.closed} clicked={props.clicked} />\r\n            <div className={classAdded.join(' ')} >\r\n                <img className={classes.Logo} src={burgerLogo} alt=\"MyBurger\"></img>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../Components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../Components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSidedrawer: false\r\n    };\r\n\r\n    showSidedrawerHandler = () => {\r\n        this.setState({showSidedrawer: true});\r\n    }\r\n    hideSidedrawerHandler = () => {\r\n        this.setState({showSidedrawer: false});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Aux>\r\n                <div className={classes.ButtonToggler}>\r\n                    <Toolbar clicked={this.showSidedrawerHandler} />\r\n                </div>\r\n                <SideDrawer open={this.showSidedrawerHandler} closed={this.state.showSidedrawer} clicked={this.hideSidedrawerHandler} />\r\n                <main className = {classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n        \r\n    };\r\n    \r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst burgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>     \r\n                    </div>\r\n                );\r\n                break;\r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n};\r\n\r\nburgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default burgerIngredient;","import React from 'react';\r\nimport BurgerIngredient from '../Burger/BurgerIngredients/BurgerIngredient';\r\nimport classes from '../Burger/Burger.module.css';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map(\r\n        iKey => {\r\n            return [...Array(props.ingredients[iKey])].map((_, i) => {\r\n                return <BurgerIngredient key={iKey + i} type={iKey} />;\r\n            });\r\n        }\r\n    ).reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding Ingredients!</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => (\r\n\r\n    <div className={classes.BuildControl}>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disable}>-</button>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.More} onClick={props.added}>+</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n    {label: 'Bacon', type: 'bacon'}\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p className={classes.PriceDisplay}><strong>Current Price: <em>${props.price.toFixed(2)}</em></strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label}\r\n            label={ctrl.label}\r\n            added={() => props.ingredientsAdded(ctrl.type)}\r\n            removed={() => props.ingredientsRemoved(ctrl.type)}\r\n            disable={props.disabled[ctrl.type]}\r\n            />\r\n            \r\n        ))}\r\n        <button className={classes.OrderButton} \r\n        disabled={!props.purchasable}\r\n        onClick={props.ordered}>\r\n            <strong>ORDER NOW</strong>\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../HOC/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.clicked} />\r\n                <div className={classes.Modal}\r\n                style={\r\n                    {\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0' \r\n                    }\r\n                }>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button \r\n    disabled={props.disabled}\r\n    onClick={props.clicked} \r\n    className={[classes.Button, classes[props.btnType]].join(' ')}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Aux from '../../../HOC/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients).map(ikey => {\r\n    return  <li key={ikey}> \r\n                <span style={{textTransform: 'capitalize'}} >{ikey}</span> : {props.ingredients[ikey]} \r\n            </li>\r\n    })\r\n\r\n    return(\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n    <p>Continue to CheckOut: <strong style={{size: \"2.5rem\"}}>$ {props.totalPrice.toFixed(2)}</strong></p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancel}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinue}>CONTINUE</Button>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-44fa5.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n)\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport Modal from '../../Components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        constructor(){\r\n            super();\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null})\r\n                return req;\r\n            })\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error})}\r\n                )\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n        \r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n        \r\n\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                    show={this.state.error}\r\n                    clicked={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n} \r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react';\r\nimport Aux from '../../HOC/Auxiliary/Auxiliary';\r\nimport Burger from '../../Components/Burger/Burger';\r\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../Components/UI/Modal/Modal';\r\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-order';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../HOC/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actionCreaters from '../../Store/Actions/actionCreaters';\r\n\r\n// const INGREDIENT_PRICES = {\r\n//     salad: 0.5,\r\n//     cheese: 0.7,\r\n//     meat: 1.2,\r\n//     bacon: 1\r\n// };\r\n\r\nclass BurgerBuilder extends Component{\r\n\r\n    state = {\r\n        // ingredients: null,\r\n        // totalPrice: 4,\r\n        // purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        // axios.get('https://react-my-burger-44fa5.firebaseio.com/ingredients.json')\r\n        // .then(response => {\r\n        //     this.setState({ingredients: response.data});\r\n        // })\r\n        // .catch(error => {this.setState({error: true})})\r\n    }\r\n\r\n    updatePurchaseState = () => {\r\n        const sum = Object.keys(this.props.ings).map(ikey => {\r\n            return this.props.ings[ikey];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        } , 0);\r\n        return sum > 0;\r\n    }\r\n    \r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true})\r\n    }\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount +1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n    //     this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if(oldCount <= 0){\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount -1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        \r\n        // const queryParams = [];\r\n        // for(let i in this.props.ings){\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ings[i]));\r\n        // }\r\n        // queryParams.push('price=' + this.props.totalAmount);\r\n        // const queryString = queryParams.join('&');\r\n        // console.log(queryString)\r\n        \r\n        this.props.history.push({\r\n            pathname: '/checkout'\r\n            // search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };   \r\n\r\n        let burger = this.state.error ? <p style={{backgroundColor: 'white', textAlign: 'center'}}>Cat't load ingredients!</p> : <Spinner />;\r\n        let orderSummary = <Spinner />\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls \r\n                        ingredientsAdded={this.props.onIngredientAdded}\r\n                        ingredientsRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo} \r\n                        price={this.props.totalAmount}\r\n                        purchasable={this.updatePurchaseState()}\r\n                        ordered={this.purchaseHandler}\r\n                        />\r\n                </Aux>\r\n            );\r\n            orderSummary = (\r\n                <OrderSummary ingredients={this.props.ings} \r\n                         purchaseCancel={this.purchaseCancelHandler}\r\n                         purchaseContinue={this.purchaseContinueHandler}\r\n                         totalPrice={this.props.totalAmount} />\r\n            )\r\n            \r\n            if(this.state.loading){\r\n                orderSummary = <Spinner />\r\n            }\r\n        } \r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        };\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} clicked={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.ingredients,\r\n        totalAmount: state.totalPrice,\r\n        purchasable: state.purchasable\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actionCreaters.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actionCreaters.removeIngredient(ingName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n// export const PURCHASABLE_STATE = 'PURCHASABLE_STATE'\r\n\r\nexport const addIngredient = (igName) => {\r\n    return {\r\n        type: 'ADD_INGREDIENT',\r\n        ingredientName: igName\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (igName) => {\r\n    return {\r\n        type: 'REMOVE_INGREDIENT',\r\n        ingredientName: igName\r\n    }\r\n}","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes good!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients} ></Burger>\r\n            </div>\r\n            <Button btnType=\"Danger\"\r\n            clicked={props.checkoutCancelled} >CANCEL</Button>\r\n            <Button btnType=\"Success\"\r\n            clicked={props.checkoutContinued} >CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement]\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n    \r\n    switch(props.elementType){\r\n        case ('input'):\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig} \r\n                            value={props.value} \r\n                            onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig} \r\n                            value={props.value} \r\n                            onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (<select\r\n                             className={inputClasses.join(' ')}\r\n                             value={props.value}\r\n                             onChange={props.changed}>\r\n                                 {props.elementConfig.options.map(option => (\r\n                                     <option\r\n                                      key={option.value}\r\n                                      value={option.value}>\r\n                                          {option.displayValue}\r\n                                     </option>\r\n                                 ))}\r\n                            </select>)\r\n            break;    \r\n        \r\n        default:\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig} \r\n                            value={props.value} \r\n                            onChange={props.changed}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label} >{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React, {Component} from 'react';\r\nimport classes from './ContactData.module.css';\r\nimport Button from '../../../Components/UI/Button/Button';\r\nimport axios from '../../../axios-order';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Input from '../../../Components/UI/Input/Input';\r\nimport {connect} from 'react-redux';\r\n\r\nconst orderFormat = (elType, type, placeHolder, value) => {\r\n    return {\r\n            elementType: elType,\r\n            elementConfig: {\r\n                type: type,\r\n                placeholder: placeHolder\r\n            },\r\n            value: value,\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n    }\r\n};\r\n\r\nclass ContactData extends Component {\r\n\r\n    state={\r\n        orderForm: {\r\n            name: orderFormat('input', 'text', 'Your Name', ''),\r\n            street: orderFormat('input', 'text', 'Street', ''),\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                    maxLength: 6 \r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: orderFormat('input', 'text', 'Country', ''),\r\n            email: orderFormat('input', 'email', 'Your Email', ''),\r\n            deliveyMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: '',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        }, \r\n        formIsValid: false,\r\n        loading: false\r\n    }\r\n\r\n    orderPurchasedHandler = (event) => {\r\n        event.preventDefault();\r\n        const finalPrice = +this.props.price;\r\n        const fixedFinalPrice = finalPrice.toFixed(2);\r\n        this.setState({loading: true})\r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: fixedFinalPrice,\r\n            orderData: formData\r\n        }\r\n\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                this.setState({loading: false});\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => this.setState({loading: false}));\r\n    }\r\n    \r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if(!rules){\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        console.log([\"input Handler\"]);\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in this.state.orderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n         \r\n        let form = (\r\n            <form onSubmit={(event) => this.orderPurchasedHandler(event)} >\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value} \r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid} >Order Now</Button>\r\n            </form>\r\n        )\r\n        if(this.state.loading){\r\n            form = <Spinner />\r\n        }\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact details</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingredients,\r\n        price: state.totalPrice\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContactData);","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../../Components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route} from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n    // state = {\r\n    //     ingredients: null,\r\n    //     price: 0\r\n    // }\r\n\r\n    // componentWillMount(){\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingredients = {};\r\n    //     let price = 0;\r\n    //     for(let param of query.entries()){\r\n    //         //['salad', '1']\r\n    //         if(param[0] === 'price'){\r\n    //             price = param[1];\r\n    //         }\r\n    //         else{\r\n    //             ingredients[param[0]] = +param[1];\r\n    //         }\r\n    //     } \r\n    //     this.setState({ingredients: ingredients, price: price});\r\n    //     console.log(ingredients + '&' + price);\r\n    // }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <CheckoutSummary ingredients={this.props.ings}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler} />\r\n                <Route \r\n                path={this.props.match.path + '/contact-data'}\r\n                // render={(props) => (<ContactData ingredients={this.state.ingredients} totalPrice={this.state.price} {...props} />)} />\r\n                component={ContactData} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingredients\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    // to display ingredients we can also use transformed ingredients method\r\n    // but here we use different approach\r\n    const ingredients = [];\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span key={ig.name} \r\n            className={classes.Span} >\r\n                {ig.name} ({ig.amount})\r\n            </span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport Order from '../../Components/Order/Order';\r\nimport axios from '../../axios-order';\r\nimport withErrorHandler from '../../HOC/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/orders.json')\r\n        .then(res => {\r\n            const fetchedOrders = [];\r\n            for(let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n                console.log(fetchedOrders);\r\n            }\r\n            this.setState({orders: fetchedOrders, loading: false});\r\n        }).catch(err => {this.setState({loading: false})})\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.state.orders.map(order =>(\r\n                    <Order ingredients={order.ingredients}\r\n                    key={order.id}\r\n                    price={order.price} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, {Component} from 'react';\nimport './App.css';\nimport Layout from './HOC/Layout/Layout';\nimport BurgerBuilder from './Containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './Containers/Checkout/Checkout';\nimport {Route, Switch} from 'react-router-dom';\nimport Orders from './Containers/Orders/Orders';\n\nclass App extends Component {\n\n  render(){\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/Orders\" component={Orders} />\n            <Route path=\"/BurgerBuilder\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import * as actionTypes from '../Actions/actionCreaters';\r\n\r\nconst initialState = {\r\n    ingredients: {\r\n        salad: 0,\r\n        cheese: 0,\r\n        meat: 0,\r\n        bacon: 0\r\n    },\r\n    totalPrice: 4\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.7,\r\n    meat: 1.2,\r\n    bacon: 1\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'ADD_INGREDIENT':\r\n            return {\r\n                ...state, \r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName] : state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case 'REMOVE_INGREDIENT':\r\n            return {\r\n                ...state, \r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName] : state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './Store/Reducers/Reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}